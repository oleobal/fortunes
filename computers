I get into the meanest, nastiest frame of mind that I can manage, and I write
the cruelest code I can think of; then I turn around and embed that in even
nastier constructions that are almost obscene.

	-- Donald Knuth
	(The Errors of TeX, 1989)
%
I now look forward to making further errors in my next project.

	-- Donald Knuth
	(Notes on the errors of TeX, 10th TUG meeting, 1986)
%
Proof by analogy is fraud.

	-- Bjarne Stroustrup
	(The C++ Programming Language, p. 692)
%
Only half of the C++ community is above average

	-- Bjarne Stroustrup
	(his FAQ, "a WG21 evening session")
%
I have a simple rule in life: If I don't understand something, it must be bad.

	-- Linus Torvalds
	(Unsourced, before 2002)
%
When in doubt, use brute force.

	-- Ken Thompson
	(quoted by E. Raymond in "The Art of Unix Programming")
%
Robert Metcalf [the inventor of Ethernet] says that if something comes along to
replace Ethernet, it will be called “Ethernet”, so therefore Ethernet will never
die. Unix has already undergone several such transformations.

	-- Ken Thompson
	(quoted by E. Raymond in "The Art of Unix Programming")
%
"Be sure brain is in gear before engaging mouth"

	-- Supposedly on a sign at the Air Force Academy, Colorado
	(quoted by A. Tenenbaum in "Tenenbaum-Torvalds debate, Part II")
%
Faggin: So I develop a special etch which eventually ended up being called,
	Freddy’s Etch.   
Hendrie:  Very good. 
Faggin:  After experimenting and burning a hole in my shoe, because it’s...
	[tape runs out]

	-- Federico Faggin (interviewed by Gardner Hendrie)
	(The Oral History of Federico Faggin, 2006)
%
Mazor and I went to the airport to meet Masatoshi Shima, who was arriving from
Tokyo.  So we met, and Shima said, "I'm here to check.  I'm here to check." 
"Okay, great."  So we went to the office, and Shima  immediately asked to
check.  So I asked Mazor if what I had was all that we had, or if there was
something else, because Shima insisted that he wanted to check the logic, that
was apparently promised that it was done.  And Mazor said, "No, that’s all we
have. [...]  Yeah, and Shima looked this thing over and a few minutes later
said, "This is not what I came to do!"  He was really mad!  He was saying:
"This is idea.  This is not design.  I want... I came here to check, and there
is nothing to check!"  He was really, really upset!  And I said, "Well, you
know, I just joined the company yesterday."  "Yeah, you bad!  You bad!"
<laughs>  "You were supposed to do!"  You know, he probably meant Intel, right?

	-- Federico Faggin (interviewed by Gardner Hendrie),
	  on the Intel 4004 processor, which was months late with no efforts
	  from Intel.
	(The Oral History of Federico Faggin, 2006)
%
I see you two use the same barber.

	-- Denton Cooley, to Ken Thompson and Dennis Ritchie
	(quoted by Dennis Ritchie in "Letter from Washington:
	  The National Medal of Technology Experience", 1999)
%
That brings me to Dennis Ritchie.  Our collaboration has been a thing of beauty.
In the ten years that we have worked together, I can recall only one case of
miscoordination of work.  On that occasion, I discovered that we both had
written the same 20-line assembly language program.  I compared the sources and
was astounded to find that they matched character-for-character.  The result of
our work together has been far greater than the work that we each contributed.

	-- Ken Thompson
	(Reflections on Trusting Trust, 1994)
%
I think that computing is a finite field and it's reaching its apex and we will
be on a wane after this. I am sorry to say that, but that's the way I feel.

	-- Ken Thompson
	(Unix and Beyond: An Interview with Ken Thompson, "Computer", May 1999)
%
If you want to go somewhere, goto is the best way to get there.

	-- Ken Thompson
	(Plan9 fortunes file)
%
The differences between Kernighan Ritchie Thompson are real but very
subtle.  We all look alike (middle aged with scruffy graying beards).
	[...]
Kernighan has written ten times as much readable prose as has
Ritchie, Ritchie ten times as much as Thompson.  It's tempting to say
that the reverse proportions hold for code, but in fact Kernighan and
Ritchie are more nearly tied and Thompson wipes us both out.

	-- Dennis Ritchie
	(Unsourced, quoted by message on rec.humor.funny.reruns newsgroup, 1991)
%
A distributed system is one in which the failure of a computer you didn't even
know existed can render your own computer unusable.  

	-- Leslie Lamport
	(Email message sent to a DEC SRC bulletin board on May 28, 1987)
%
One thread of related languages is:
Algol -> CPL -> BCPL -> B -> C -> C++ -> Java, indicating that BCPL is just a
small link in the chain from the development of Algol in the late 1950s to 
Java in the 1980s.

	-- Martin Richards
	(Young Persons Guide to BCPL Programming on the Raspberry Pi, Retrieved
	 September 10, 2018)
%
By the way, 'em' stands for 'editor for mortals' - I christened it that after
Ken Thompson visited our lab at QMC while I was developing it and said
something like:
  "yeah, I've seen editors like that, but I don't feel a need for them, I don't
  want to see the state of the file when I'm editing".

	-- George Coulouris
	(Interview with Peter Salus, A Quarter Century of UNIX, P. H. Salus, 1994)
%
The good thing about reinventing the wheel is that you can get a round one.

	-- Douglas Crockford, co-creator of JSON, about JSON's relationship to XML
	(Comment on D. Winner's "Scripting News for 12/20/2006", December 20, 2006)
%
The Software shall be used for Good, not Evil.

	-- The (infamous) JSON License
%
Hardware is quite tangible: if you drop a computer on your foot, you'll notice.
Not true for software. 

	-- Brian Kernighan
	("What Should an Educated Person Know about Computers?",
	 IEEE SSCS NEWS, Spring 2018)
%
I am the best programmer on the planet -- that's why God chose me and that
should help you understand. There are two kinds of programmers -- those who
have written compilers and those who haven't. What sounds impossible for you is
not impossible for me.

	-- Terry A. Davis ("Terry Davis' Rants", 2013-09-13)
%
There are two kinds of programmers -- those who have written compilers and
those who haven't.

	-- Terry A. Davis ("Terry Davis' Rants", 2013-09-13)
%
All told, a monad in X is just a monoid in the category of endofunctors of X,
with product × replaced by composition of endofunctors and unit set by the
identity endofunctor.

	-- Saunders Mac Lane (Categories for the Working Mathematician)
%
Technical incompetence, probably enhanced by dishonesty.

	-- Edsger Dijkstra ("On the GREEN Language submitted to the DoD", 1978)
%
It's like missing the difference between music and instruments. You can put a
piano in every classroom, but that won't give you a developed music culture,
because the music culture is embodied in people.

On the other hand, if you have a musician who is a teacher, then you don't
need musical instruments, because the kids can sing and dance. But if you don't
have a teacher who is a carrier of music, then all efforts to do music in the
classroom will fail—because existing teachers who are not musicians will decide
to teach the C Major scale and see what the bell curve is on that.

The important thing here is that the music is not in the piano. And knowledge
and edification is not in the computer. The computer is simply an instrument
whose music is ideas. 

	-- Alan Kay ("Face to Face: Alan Kay Still Waiting for the Revolution",
	             Lars Kongshem, April/May 2003)
%
The computer is simply an instrument whose music is ideas. 

	-- Alan Kay ("Face to Face: Alan Kay Still Waiting for the Revolution",
	             Lars Kongshem, April/May 2003)
%
A platform is when the economic value of everybody that uses it, exceeds the
value of the company that creates it.

	-- Bill Gates, paraphrased by Chamath Palihapitiya
	   (interviewed by Semil Shah on September 26, 2015)
%
The noted linguistic theorist Benjamin Whorf said that our language determines
what concepts we can think. C has this effect on Unix; it prevents programmers
from writing robust software by making such a thing unthinkable.

	-- Unix-Haters Handbook
%
Pointers are real. They’re what the hardware understands. Somebody has to deal
with them. You can’t just place a LISP book on top of an x86 chip and hope that
the hardware learns about lambda calculus by osmosis.

	-- James Mickens ("The Night Watch",
	   published in ";login: logout", November 2013)
